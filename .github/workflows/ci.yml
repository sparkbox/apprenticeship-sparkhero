name: PR

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check-commit-message:
    name: Check Commit Message
    runs-on: ubuntu-latest

    steps:
      - name: Proofread commit types
        uses: gsactions/commit-message-checker@v1
        with:
          pattern: '^((:art:|:racehorse:|:non-potable_water:|:memo:|:penguin:|:apple:|:checkered_flag:|:bug:|:fire:|:green_heart:|:white_check_mark:|:lock:|:arrow_up:|:arrow_down:|:shirt:) )?(feat|fix|docs|style|refactor|test|chore).+'
          error: 'Commit messages must begin with a valid commit type.'
          excludeDescription: 'true'
          excludeTitle: 'true'
          checkAllCommitMessages: 'true'
          accessToken: ${{ secrets.GITHUB_TOKEN }}

  install-dependencies:
    name: Cache Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 20

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Save to Cache
        uses: actions/cache@v2
        with:
          path: '**/'
          key: ${{ runner.os }}-${{github.run_id}}

  linting:
    name: Linting
    runs-on: ubuntu-latest
    needs: install-dependencies
    timeout-minutes: 20

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Pull from Cache
        uses: actions/cache@v2
        with:
          path: |
            **/
          key: ${{ runner.os }}-${{github.run_id}}

      - name: Lint source code
        run: npm run lint

  testing:
    name: Testing
    runs-on: ubuntu-latest
    needs: install-dependencies
    timeout-minutes: 20

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Pull from Cache
        uses: actions/cache@v2
        with:
          path: '**/'
          key: ${{ runner.os }}-${{github.run_id}}

      - name: Test source code
        run: npm run test:coverage -- --verbose

  build-artifact:
      name: Build Artifact
      runs-on: ubuntu-latest
      needs: install-dependencies
      timeout-minutes: 20

      strategy:
        matrix:
          node-version: [14.x]

      steps:
        - uses: actions/checkout@v1

        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v1
          with:
            node-version: ${{ matrix.node-version }}

        - name: Pull from Cache
          uses: actions/cache@v2
          with:
            path: '**/'
            key: ${{ runner.os }}-${{github.run_id}}

        - name: Build
          run: npm run build --if-present
